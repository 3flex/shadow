(window.webpackJsonp=window.webpackJsonp||[]).push([[34],{314:function(t,a,s){"use strict";s.r(a);var n=s(14),e=Object(n.a)({},(function(){var t=this,a=t._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"creating-a-custom-shadowjar-task"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#creating-a-custom-shadowjar-task"}},[t._v("#")]),t._v(" Creating a Custom ShadowJar Task")]),t._v(" "),a("p",[t._v("The built in "),a("code",[t._v("shadowJar")]),t._v(" task only provides an output for the "),a("code",[t._v("main")]),t._v(" source set of the project.\nIt is possible to add arbitrary "),a("a",{attrs:{href:"https://gradleup.com/shadow/api/com/github/jengelman/gradle/plugins/shadow/tasks/ShadowJar.html",target:"_blank",rel:"noopener noreferrer"}},[a("code",[t._v("ShadowJar")]),a("OutboundLink")],1),t._v("\ntasks to a project. When doing so, ensure that the "),a("code",[t._v("configurations")]),t._v(" property is specified to inform Shadow which\ndependencies to merge into the output.")]),t._v(" "),a("div",{staticClass:"language-groovy extra-class"},[a("pre",{pre:!0,attrs:{class:"language-groovy"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Shadowing Test Sources and Dependencies")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" com"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("github"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("jengelman"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("gradle"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("plugins"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("shadow"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("tasks"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("ShadowJar\n\ntask "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("testJar")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("type"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" ShadowJar"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  archiveClassifier"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("set")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token interpolation-string"}},[a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"tests"')])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  from sourceSets"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("test"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("output\n  configurations "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("project"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("configurations"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("testImplementation"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("The code snippet above will generate a shadowed JAR containing both the "),a("code",[t._v("main")]),t._v(" and "),a("code",[t._v("test")]),t._v(" sources as well as all "),a("code",[t._v("runtime")]),t._v("\nand "),a("code",[t._v("testImplementation")]),t._v(" dependencies.\nThe file is output to "),a("code",[t._v("build/libs/<project>-<version>-tests.jar")]),t._v(".")])])}),[],!1,null,null,null);a.default=e.exports}}]);