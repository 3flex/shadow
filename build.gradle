buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath 'com.jfrog.bintray.gradle:gradle-bintray-plugin:0.5'
        classpath "org.jfrog.buildinfo:build-info-extractor-gradle:3.0.0"
    }
}

apply plugin: 'groovy'
apply plugin: 'idea'
apply plugin: 'project-report'

apply from: file('gradle/docs.gradle')
apply from: file('gradle/publish.gradle')

repositories {
    jcenter()
    maven {
        url 'http://dl.bintray.com/johnrengelman/gradle-plugins'
    }
}

sourceSets {
    testUtils
}

dependencies {

    compile localGroovy()
    compile gradleApi()
    compile 'jdom:jdom:1.1'
    compile 'org.ow2.asm:asm:4.1'
    compile 'org.ow2.asm:asm-commons:4.1'
    compile 'commons-io:commons-io:2.4'

    testUtilsCompile localGroovy()
    testUtilsCompile gradleApi()

    testCompile configurations.testUtilsCompile
    testCompile 'com.github.jengelman.gradle.plugins:gradle-test-kit:0.2'
    testCompile("org.spockframework:spock-core:0.7-groovy-1.8") {
        exclude module: 'groovy-all'
    }
    testCompile 'xmlunit:xmlunit:1.3'
}

test {
    if (System.env.CI == 'true') {
        testLogging.showStandardStreams = true
    }
}

jar {
    from rootProject.file('LICENSE')
    from rootProject.file('NOTICE')
}

idea {
    module {
        testSourceDirs += sourceSets.testUtils.allSource.srcDirs
        scopes.TEST.plus += configurations.testUtilsRuntime
        outputDir = sourceSets.main.output.classesDir
        testOutputDir = sourceSets.test.output.classesDir
    }
}

sourceSets.test.compileClasspath += sourceSets.testUtils.output
sourceSets.test.runtimeClasspath += sourceSets.testUtils.output

